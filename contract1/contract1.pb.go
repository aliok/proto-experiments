// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: contract1.proto

package contract1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CloudEvent content mode
type ContentMode int32

const (
	ContentMode_BINARY     ContentMode = 0
	ContentMode_STRUCTURED ContentMode = 1
)

// Enum value maps for ContentMode.
var (
	ContentMode_name = map[int32]string{
		0: "BINARY",
		1: "STRUCTURED",
	}
	ContentMode_value = map[string]int32{
		"BINARY":     0,
		"STRUCTURED": 1,
	}
)

func (x ContentMode) Enum() *ContentMode {
	p := new(ContentMode)
	*p = x
	return p
}

func (x ContentMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentMode) Descriptor() protoreflect.EnumDescriptor {
	return file_contract1_proto_enumTypes[0].Descriptor()
}

func (ContentMode) Type() protoreflect.EnumType {
	return &file_contract1_proto_enumTypes[0]
}

func (x ContentMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentMode.Descriptor instead.
func (ContentMode) EnumDescriptor() ([]byte, []int) {
	return file_contract1_proto_rawDescGZIP(), []int{0}
}

type Ingress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional content mode to use when pushing messages to Kafka
	ContentMode ContentMode `protobuf:"varint,1,opt,name=contentMode,proto3,enum=ContentMode" json:"contentMode,omitempty"`
	// Ingress can both listen on a specific HTTP path
	// or listen to the / path but match the Host header
	//
	// Types that are assignable to IngressType:
	//	*Ingress_Path
	//	*Ingress_Host
	IngressType isIngress_IngressType `protobuf_oneof:"ingressType"`
}

func (x *Ingress) Reset() {
	*x = Ingress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ingress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingress) ProtoMessage() {}

func (x *Ingress) ProtoReflect() protoreflect.Message {
	mi := &file_contract1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingress.ProtoReflect.Descriptor instead.
func (*Ingress) Descriptor() ([]byte, []int) {
	return file_contract1_proto_rawDescGZIP(), []int{0}
}

func (x *Ingress) GetContentMode() ContentMode {
	if x != nil {
		return x.ContentMode
	}
	return ContentMode_BINARY
}

func (m *Ingress) GetIngressType() isIngress_IngressType {
	if m != nil {
		return m.IngressType
	}
	return nil
}

func (x *Ingress) GetPath() string {
	if x, ok := x.GetIngressType().(*Ingress_Path); ok {
		return x.Path
	}
	return ""
}

func (x *Ingress) GetHost() string {
	if x, ok := x.GetIngressType().(*Ingress_Host); ok {
		return x.Host
	}
	return ""
}

type isIngress_IngressType interface {
	isIngress_IngressType()
}

type Ingress_Path struct {
	// path to listen for incoming events.
	Path string `protobuf:"bytes,2,opt,name=path,proto3,oneof"`
}

type Ingress_Host struct {
	// host header to match
	Host string `protobuf:"bytes,3,opt,name=host,proto3,oneof"`
}

func (*Ingress_Path) isIngress_IngressType() {}

func (*Ingress_Host) isIngress_IngressType() {}

var File_contract1_proto protoreflect.FileDescriptor

var file_contract1_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x74, 0x0a, 0x07, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x29, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x55, 0x52, 0x45, 0x44,
	0x10, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contract1_proto_rawDescOnce sync.Once
	file_contract1_proto_rawDescData = file_contract1_proto_rawDesc
)

func file_contract1_proto_rawDescGZIP() []byte {
	file_contract1_proto_rawDescOnce.Do(func() {
		file_contract1_proto_rawDescData = protoimpl.X.CompressGZIP(file_contract1_proto_rawDescData)
	})
	return file_contract1_proto_rawDescData
}

var file_contract1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contract1_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_contract1_proto_goTypes = []interface{}{
	(ContentMode)(0), // 0: ContentMode
	(*Ingress)(nil),  // 1: Ingress
}
var file_contract1_proto_depIdxs = []int32{
	0, // 0: Ingress.contentMode:type_name -> ContentMode
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_contract1_proto_init() }
func file_contract1_proto_init() {
	if File_contract1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contract1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ingress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contract1_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Ingress_Path)(nil),
		(*Ingress_Host)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contract1_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contract1_proto_goTypes,
		DependencyIndexes: file_contract1_proto_depIdxs,
		EnumInfos:         file_contract1_proto_enumTypes,
		MessageInfos:      file_contract1_proto_msgTypes,
	}.Build()
	File_contract1_proto = out.File
	file_contract1_proto_rawDesc = nil
	file_contract1_proto_goTypes = nil
	file_contract1_proto_depIdxs = nil
}
